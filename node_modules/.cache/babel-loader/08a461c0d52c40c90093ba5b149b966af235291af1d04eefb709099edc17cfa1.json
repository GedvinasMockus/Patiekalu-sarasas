{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_LoadingDialog = _resolveComponent(\"LoadingDialog\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, {\n    class: \"fill-height\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_btn, null, {\n      default: _withCtx(() => [_createTextVNode(\" Opa \")]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_LoadingDialog, {\n      modelValue: $setup.loading,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loading = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"]), _createCommentVNode(\" <v-row v-if=\\\"!loading\\\">\\n            <v-col class=\\\"pt-2 pb-2 d-flex align-center\\\" cols=\\\"12\\\">\\n                <p class=\\\"text-h4 me-1\\\">Select a city</p>\\n                <v-icon class=\\\"ms-1 me-auto\\\" icon=\\\"mdi-city\\\" size=\\\"x-large\\\"></v-icon>\\n            </v-col>\\n            <v-col class=\\\"pt-2 pb-2\\\" cols=\\\"12\\\">\\n                <v-divider thickness=\\\"2px\\\"></v-divider>\\n            </v-col>\\n            <v-col class=\\\"pt-2 pb-2\\\" v-for=\\\"city in cities\\\" lg=\\\"4\\\" md=\\\"6\\\" cols=\\\"12\\\" :key=\\\"city.id\\\">\\n                <v-card variant=\\\"flat\\\" color=\\\"blue-grey-lighten-5\\\" :to=\\\"{name: 'hairSalonList', 'params': { cityId: city.id }}\\\" hover>\\n                    <v-card-title class=\\\"text-grey-darken-3\\\">{{ city.name }}</v-card-title>\\n                </v-card>\\n            </v-col>\\n            <v-col class=\\\"pt-2 pb-2\\\" cols=\\\"12\\\">\\n                <v-divider thickness=\\\"2px\\\"></v-divider>\\n            </v-col>\\n        </v-row> \")]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","class","_createVNode","_component_v_btn","_component_LoadingDialog","$setup","loading","$event","_createCommentVNode"],"sources":["C:\\Users\\Gedvilas\\Desktop 2\\Kirpyklu-sistema-front\\src\\views\\HomeView.vue"],"sourcesContent":["\n<template>\n    <v-container class=\"fill-height\">\n        <v-btn>\n            Opa\n        </v-btn>\n        <LoadingDialog v-model=\"loading\"/>\n        <!-- <v-row v-if=\"!loading\">\n            <v-col class=\"pt-2 pb-2 d-flex align-center\" cols=\"12\">\n                <p class=\"text-h4 me-1\">Select a city</p>\n                <v-icon class=\"ms-1 me-auto\" icon=\"mdi-city\" size=\"x-large\"></v-icon>\n            </v-col>\n            <v-col class=\"pt-2 pb-2\" cols=\"12\">\n                <v-divider thickness=\"2px\"></v-divider>\n            </v-col>\n            <v-col class=\"pt-2 pb-2\" v-for=\"city in cities\" lg=\"4\" md=\"6\" cols=\"12\" :key=\"city.id\">\n                <v-card variant=\"flat\" color=\"blue-grey-lighten-5\" :to=\"{name: 'hairSalonList', 'params': { cityId: city.id }}\" hover>\n                    <v-card-title class=\"text-grey-darken-3\">{{ city.name }}</v-card-title>\n                </v-card>\n            </v-col>\n            <v-col class=\"pt-2 pb-2\" cols=\"12\">\n                <v-divider thickness=\"2px\"></v-divider>\n            </v-col>\n        </v-row> -->\n    </v-container>\n</template>\n\n<script>\nimport { ref } from 'vue'\nimport axios from 'axios'\nimport LoadingDialog from '../components/LoadingDialog.vue'\nimport CloseButton from '../components/CloseButton.vue'\nimport { POSITION, useToast } from 'vue-toastification'\nexport default {\n    components: {\n        LoadingDialog\n    },\n    setup() {\n        const toast = useToast()\n\n        const cities = ref([])\n        const loading = ref(true)\n        axios.get(`${process.env.VUE_APP_API}/cities`)\n            .then((res) => {\n                cities.value = res.data\n                loading.value = false\n            }).catch((err) => {\n                if(!err.response) {\n                    toast.error('Server is currently offline', {\n                        position: POSITION.TOP_CENTER,\n                        timeout: 3000,\n                        closeButton: CloseButton\n                    })\n                }\n                else console.log(err)\n            })\n        return { cities, loading }\n    }\n}\n</script>\n\n<style>\n\n</style>"],"mappings":";;;;;uBAEIA,YAAA,CAsBcC,sBAAA;IAtBDC,KAAK,EAAC;EAAa;sBAC5B,MAEQ,CAFRC,YAAA,CAEQC,gBAAA;wBAFD,MAEP,C,iBAFO,OAEP,E;;QACAD,YAAA,CAAkCE,wBAAA;kBAAVC,MAAA,CAAAC,OAAO;iEAAPD,MAAA,CAAAC,OAAO,GAAAC,MAAA;6CAC/BC,mBAAA,q8BAgBY,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}