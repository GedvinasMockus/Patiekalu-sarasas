{"ast":null,"code":"import { computed, nextTick, reactive, ref, onMounted } from 'vue';\nimport axios from 'axios';\nimport LoadingDialog from '../components/LoadingDialog.vue';\nimport TableLoader from '../components/TableLoader.vue';\nimport CloseButton from '../components/CloseButton.vue';\nimport { jwtDecode } from 'jwt-decode';\nimport { POSITION, useToast } from 'vue-toastification';\nimport router from '@/router';\nexport default {\n  props: ['rid', 'token'],\n  components: {\n    TableLoader,\n    LoadingDialog\n  },\n  setup(props, context) {\n    const toast = useToast();\n    const menus = ref([]);\n    const loading = ref(true);\n    const empty = ref(false);\n    const fetchMenus = () => {\n      axios.get(`${process.env.VUE_APP_API}/restaurant/${props.rid}/menu`).then(res => {\n        console.log(res.data);\n        menus.value = res.data;\n        loading.value = false;\n      }).catch(err => {\n        if (err.response?.status === 401) {\n          axios.post(`${process.env.VUE_APP_API}/refresh`).then(res => {\n            const accessToken = res.data.data.token;\n            context.emit('refresh', accessToken);\n            fetchMenus();\n          }).catch(err => {});\n        } else if (err.response?.status === 404) {\n          empty.value = true;\n          loading.value = false;\n        }\n        if (!err.response) {\n          toast.error('Server is currently offline', {\n            position: POSITION.TOP_CENTER,\n            timeout: 3000,\n            closeButton: CloseButton\n          });\n        } else console.log(err);\n      });\n    };\n    onMounted(() => {\n      fetchMenus(); // Initial fetch of restaurants\n    });\n    return {\n      menus,\n      loading,\n      empty\n    };\n  }\n};","map":{"version":3,"names":["computed","nextTick","reactive","ref","onMounted","axios","LoadingDialog","TableLoader","CloseButton","jwtDecode","POSITION","useToast","router","props","components","setup","context","toast","menus","loading","empty","fetchMenus","get","process","env","VUE_APP_API","rid","then","res","console","log","data","value","catch","err","response","status","post","accessToken","token","emit","error","position","TOP_CENTER","timeout","closeButton"],"sources":["C:\\Users\\Gedvilas\\Desktop 2\\Kirpyklu-sistema-front\\src\\views\\MenuList.vue"],"sourcesContent":["<template>\r\n    <v-container v-if=\"token\" class=\"fill-height\">\r\n        <LoadingDialog v-model=\"loading\"/>\r\n\r\n        <v-row v-if=\"!loading\">\r\n            <v-col class=\"pt-2 pb-2\" v-for=\"menu in menus\" lg=\"4\" md=\"6\" cols=\"12\" :key=\"menu.id\">\r\n                <v-card variant=\"flat\" color=\"blue-lighten-1\" :to=\"{name: 'dishes', 'params': { rid: rid, mid: menu.id }}\" hover>\r\n                    <v-card-title class=\"text-lighten-5\">\r\n                        <v-icon icon=\"mdi-text-box-outline\"></v-icon>\r\n                        {{ menu.name }}\r\n                    </v-card-title>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <v-row v-if=\"empty\" md=\"8\" offset-md=\"2\" lg=\"6\" offset-lg=\"3\" xl=\"4\" offset-xl=\"4\">\r\n                <v-card elevation=\"16\" min-width=\"200px\" color=\"blue-lighten-1\">\r\n                    <v-card-title>\r\n                        <div class=\"text-h3 text-center\">Found no menus for this restaurant!</div>\r\n                    </v-card-title>\r\n                    <v-divider></v-divider>\r\n                </v-card>\r\n        </v-row>\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { computed, nextTick, reactive, ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\nimport LoadingDialog from '../components/LoadingDialog.vue'\r\nimport TableLoader from '../components/TableLoader.vue'\r\nimport CloseButton from '../components/CloseButton.vue'\r\nimport { jwtDecode } from 'jwt-decode'\r\nimport { POSITION, useToast } from 'vue-toastification'\r\nimport router from '@/router'\r\nexport default {\r\n    props: ['rid', 'token'],\r\n    components: {\r\n        TableLoader,\r\n        LoadingDialog\r\n    },\r\n    setup(props, context){\r\n\r\n        const toast = useToast()\r\n        const menus = ref([])\r\n        const loading = ref(true)\r\n        const empty = ref(false)\r\n\r\n        const fetchMenus = () => {\r\n            axios.get(`${process.env.VUE_APP_API}/restaurant/${props.rid}/menu`)\r\n                .then((res) => {\r\n                    console.log(res.data)\r\n                    menus.value = res.data\r\n                    loading.value = false\r\n                }).catch((err) => {\r\n                    if(err.response?.status === 401){\r\n                        axios.post(`${process.env.VUE_APP_API}/refresh`)\r\n                            .then((res) => {\r\n                                const accessToken = res.data.data.token\r\n                                context.emit('refresh', accessToken)\r\n                                fetchMenus()\r\n                            }).catch((err) => {\r\n\r\n                            })\r\n                    }\r\n                    else if(err.response?.status === 404)\r\n                    {\r\n                        empty.value = true\r\n                        loading.value = false\r\n                    }\r\n                    if(!err.response) {\r\n                        toast.error('Server is currently offline', {\r\n                            position: POSITION.TOP_CENTER,\r\n                            timeout: 3000,\r\n                            closeButton: CloseButton\r\n                        })\r\n                    }\r\n                    else console.log(err)\r\n                })\r\n        }\r\n\r\n        onMounted(() => {\r\n            fetchMenus() // Initial fetch of restaurants\r\n        })\r\n\r\n        return { menus, loading, empty }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AA4BA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,GAAG,EAAEC,SAAQ,QAAS,KAAI;AACjE,OAAOC,KAAI,MAAO,OAAM;AACxB,OAAOC,aAAY,MAAO,iCAAgC;AAC1D,OAAOC,WAAU,MAAO,+BAA8B;AACtD,OAAOC,WAAU,MAAO,+BAA8B;AACtD,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,QAAQ,EAAEC,QAAO,QAAS,oBAAmB;AACtD,OAAOC,MAAK,MAAO,UAAS;AAC5B,eAAe;EACXC,KAAK,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC;EACvBC,UAAU,EAAE;IACRP,WAAW;IACXD;EACJ,CAAC;EACDS,KAAKA,CAACF,KAAK,EAAEG,OAAO,EAAC;IAEjB,MAAMC,KAAI,GAAIN,QAAQ,CAAC;IACvB,MAAMO,KAAI,GAAIf,GAAG,CAAC,EAAE;IACpB,MAAMgB,OAAM,GAAIhB,GAAG,CAAC,IAAI;IACxB,MAAMiB,KAAI,GAAIjB,GAAG,CAAC,KAAK;IAEvB,MAAMkB,UAAS,GAAIA,CAAA,KAAM;MACrBhB,KAAK,CAACiB,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,WAAY,eAAcZ,KAAK,CAACa,GAAI,OAAM,EAC9DC,IAAI,CAAEC,GAAG,IAAK;QACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI;QACpBb,KAAK,CAACc,KAAI,GAAIJ,GAAG,CAACG,IAAG;QACrBZ,OAAO,CAACa,KAAI,GAAI,KAAI;MACxB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;QACd,IAAGA,GAAG,CAACC,QAAQ,EAAEC,MAAK,KAAM,GAAG,EAAC;UAC5B/B,KAAK,CAACgC,IAAI,CAAE,GAAEd,OAAO,CAACC,GAAG,CAACC,WAAY,UAAS,EAC1CE,IAAI,CAAEC,GAAG,IAAK;YACX,MAAMU,WAAU,GAAIV,GAAG,CAACG,IAAI,CAACA,IAAI,CAACQ,KAAI;YACtCvB,OAAO,CAACwB,IAAI,CAAC,SAAS,EAAEF,WAAW;YACnCjB,UAAU,CAAC;UACf,CAAC,CAAC,CAACY,KAAK,CAAEC,GAAG,IAAK,CAElB,CAAC;QACT,OACK,IAAGA,GAAG,CAACC,QAAQ,EAAEC,MAAK,KAAM,GAAG,EACpC;UACIhB,KAAK,CAACY,KAAI,GAAI,IAAG;UACjBb,OAAO,CAACa,KAAI,GAAI,KAAI;QACxB;QACA,IAAG,CAACE,GAAG,CAACC,QAAQ,EAAE;UACdlB,KAAK,CAACwB,KAAK,CAAC,6BAA6B,EAAE;YACvCC,QAAQ,EAAEhC,QAAQ,CAACiC,UAAU;YAC7BC,OAAO,EAAE,IAAI;YACbC,WAAW,EAAErC;UACjB,CAAC;QACL,OACKqB,OAAO,CAACC,GAAG,CAACI,GAAG;MACxB,CAAC;IACT;IAEA9B,SAAS,CAAC,MAAM;MACZiB,UAAU,CAAC,GAAE;IACjB,CAAC;IAED,OAAO;MAAEH,KAAK;MAAEC,OAAO;MAAEC;IAAM;EACnC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}