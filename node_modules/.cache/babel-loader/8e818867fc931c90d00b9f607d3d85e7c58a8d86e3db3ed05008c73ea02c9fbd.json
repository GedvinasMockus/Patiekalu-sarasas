{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, withCtx as _withCtx, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"text-center\"\n};\nconst _hoisted_2 = {\n  style: {\n    \"text-align\": \"center\",\n    \"font-size\": \"40px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"column-content\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  style: {\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"height\": \"200px\"\n  }\n};\nconst _hoisted_6 = {\n  style: {\n    \"margin-left\": \"10px\"\n  }\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"text-h3 text-center\"\n}, \"Found no dishes for this menu!\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_LoadingDialog = _resolveComponent(\"LoadingDialog\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_card_title = _resolveComponent(\"v-card-title\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_v_divider = _resolveComponent(\"v-divider\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return $props.token ? (_openBlock(), _createBlock(_component_v_container, {\n    key: 0\n  }, {\n    default: _withCtx(() => [_createVNode(_component_LoadingDialog, {\n      modelValue: $setup.loading,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.loading = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"]), !$setup.loading && $setup.isUserOwner ? (_openBlock(), _createBlock(_component_v_col, {\n      key: 0,\n      md: \"8\",\n      \"offset-md\": \"2\",\n      lg: \"6\",\n      \"offset-lg\": \"3\",\n      xl: \"2\",\n      \"offset-xl\": \"5\",\n      class: \"mb-5 mt-5\"\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_v_btn, {\n        color: \"blue-lighten-1\",\n        class: \"text-capitalize\",\n        onClick: _cache[1] || (_cache[1] = _withModifiers($event => $setup.createDish(), [\"stop\", \"prevent\"])),\n        size: \"large\",\n        active: false\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Create new dish\")]),\n        _: 1 /* STABLE */\n      })])]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), !$setup.loading ? (_openBlock(), _createBlock(_component_v_row, {\n      key: 1,\n      class: \"mt-8\"\n    }, {\n      default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.dishes, dish => {\n        return _openBlock(), _createBlock(_component_v_col, {\n          class: \"pt-2 pb-2\",\n          key: dish.id\n        }, {\n          default: _withCtx(() => [_createVNode(_component_v_card, {\n            variant: \"flat\",\n            color: \"blue-lighten-1\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card_title, {\n              class: \"text-lighten-5\"\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, _toDisplayString(dish.name), 1 /* TEXT */), _createVNode(_component_v_row, null, {\n                default: _withCtx(() => [_createVNode(_component_v_col, {\n                  cols: \"12\",\n                  md: \"4\"\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n                    src: dish.picture,\n                    alt: \"Image\",\n                    width: \"200\",\n                    height: \"200\"\n                  }, null, 8 /* PROPS */, _hoisted_4)])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */), _createVNode(_component_v_col, {\n                  cols: \"12\",\n                  md: \"8\"\n                }, {\n                  default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"div\", _hoisted_6, _toDisplayString(dish.description), 1 /* TEXT */)])]),\n                  _: 2 /* DYNAMIC */\n                }, 1024 /* DYNAMIC_SLOTS */)]),\n                _: 2 /* DYNAMIC */\n              }, 1024 /* DYNAMIC_SLOTS */)]),\n              _: 2 /* DYNAMIC */\n            }, 1024 /* DYNAMIC_SLOTS */)]),\n            _: 2 /* DYNAMIC */\n          }, 1024 /* DYNAMIC_SLOTS */)]),\n          _: 2 /* DYNAMIC */\n        }, 1024 /* DYNAMIC_SLOTS */);\n      }), 128 /* KEYED_FRAGMENT */))]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), $setup.empty ? (_openBlock(), _createBlock(_component_v_row, {\n      key: 2,\n      md: \"8\",\n      \"offset-md\": \"2\",\n      lg: \"6\",\n      \"offset-lg\": \"3\",\n      xl: \"4\",\n      \"offset-xl\": \"4\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_v_card, {\n        elevation: \"16\",\n        \"min-width\": \"200px\",\n        color: \"blue-lighten-1\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_card_title, null, {\n          default: _withCtx(() => [_hoisted_7]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_divider)]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["class","style","_createElementVNode","$props","token","_createBlock","_component_v_container","key","_createVNode","_component_LoadingDialog","$setup","loading","$event","isUserOwner","_component_v_col","md","lg","xl","_hoisted_1","_component_v_btn","color","onClick","_cache","_withModifiers","createDish","size","active","_component_v_row","_createElementBlock","_Fragment","_renderList","dishes","dish","id","_component_v_card","variant","_component_v_card_title","_hoisted_2","_toDisplayString","name","cols","_hoisted_3","src","picture","alt","width","height","_hoisted_5","_hoisted_6","description","empty","elevation","_hoisted_7","_component_v_divider"],"sources":["C:\\Users\\Gedvilas\\Desktop 2\\Kirpyklu-sistema-front\\src\\views\\DishList.vue"],"sourcesContent":["<template>\r\n    <v-container v-if=\"token\">\r\n        <LoadingDialog v-model=\"loading\"/>\r\n\r\n        <v-col v-if=\"!loading && isUserOwner\" md=\"8\" offset-md=\"2\" lg=\"6\" offset-lg=\"3\" xl=\"2\" offset-xl=\"5\" class=\"mb-5 mt-5\">\r\n            <div class=\"text-center \">\r\n                <v-btn color=\"blue-lighten-1\" class=\"text-capitalize\" @click.stop.prevent=\"createDish()\" size=\"large\" :active=\"false\">Create new dish</v-btn>\r\n            </div>\r\n        </v-col>\r\n\r\n        <v-row v-if=\"!loading\" class=\"mt-8\">\r\n            <v-col class=\"pt-2 pb-2\" v-for=\"dish in dishes\" :key=\"dish.id\">\r\n                <v-card variant=\"flat\" color=\"blue-lighten-1\">\r\n                    <v-card-title class=\"text-lighten-5\">\r\n                        <div style=\"text-align: center; font-size: 40px;\">\r\n                            {{ dish.name }}\r\n                        </div>\r\n                        <v-row>\r\n                            <v-col cols=\"12\" md=\"4\">\r\n                                <div class=\"column-content\">\r\n                                    <img :src=\"dish.picture\" alt=\"Image\" width=\"200\" height=\"200\" />\r\n                                </div>\r\n                            </v-col>\r\n                            <v-col cols=\"12\" md=\"8\">\r\n                                <div style=\"display: flex; align-items: center; height: 200px;\">\r\n                                    <div style=\"margin-left: 10px;\">\r\n                                        {{ dish.description }}\r\n                                    </div>\r\n                                </div>\r\n                            </v-col>\r\n                        </v-row>\r\n                    </v-card-title>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n\r\n        <v-row v-if=\"empty\" md=\"8\" offset-md=\"2\" lg=\"6\" offset-lg=\"3\" xl=\"4\" offset-xl=\"4\">\r\n                <v-card elevation=\"16\" min-width=\"200px\" color=\"blue-lighten-1\">\r\n                    <v-card-title>\r\n                        <div class=\"text-h3 text-center\">Found no dishes for this menu!</div>\r\n                    </v-card-title>\r\n                    <v-divider></v-divider>\r\n                </v-card>\r\n        </v-row>\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { computed, nextTick, reactive, ref, onMounted } from 'vue'\r\nimport axios from 'axios'\r\nimport LoadingDialog from '../components/LoadingDialog.vue'\r\nimport TableLoader from '../components/TableLoader.vue'\r\nimport CloseButton from '../components/CloseButton.vue'\r\nimport { jwtDecode } from 'jwt-decode'\r\nimport { POSITION, useToast } from 'vue-toastification'\r\nimport router from '@/router'\r\nexport default {\r\n    props: ['rid', 'mid', 'token'],\r\n    components: {\r\n        TableLoader,\r\n        LoadingDialog\r\n    },\r\n    setup(props, context){\r\n\r\n        const data = reactive({\r\n                name: '',\r\n                description: '',\r\n                picture: '',\r\n                menu: ''\r\n        })\r\n\r\n        const toast = useToast()\r\n        const dishes = ref([])\r\n        const loading = ref(true)\r\n        const empty = ref(false)\r\n        const deleteModal = ref(false)\r\n        const createModal = ref(false)\r\n        const updateModal = ref(false)\r\n        const submitting = ref(false)\r\n        const errors = ref({})\r\n        const isUserOwner = ref(false)\r\n        var toDelete\r\n\r\n\r\n        const claims = computed(() => {\r\n            if(props.token)\r\n                return jwtDecode(props.token)\r\n        })\r\n\r\n        const isOwner = () => {\r\n            axios.get(`${process.env.VUE_APP_API}/restaurant/${props.rid}`)\r\n                .then((res) => {\r\n                    if(res.data.owner == claims.value.sub)\r\n                    {\r\n                        isUserOwner.value = true;\r\n                    }\r\n                    else\r\n                    {\r\n                        isUserOwner.value = false;\r\n                    }\r\n                }).catch((err) => {\r\n                    if(err.response?.status === 404)\r\n                    {\r\n                        toast.error('Restaurant not found', {\r\n                            position: POSITION.TOP_CENTER,\r\n                            timeout: 3000,\r\n                            closeButton: CloseButton\r\n                        })\r\n                    }\r\n                    if(!err.response) {\r\n                        toast.error('Server is currently offline', {\r\n                            position: POSITION.TOP_CENTER,\r\n                            timeout: 3000,\r\n                            closeButton: CloseButton\r\n                        })\r\n                    }\r\n                    else console.log(err)\r\n\r\n                    isUserOwner.value = false;\r\n                })\r\n        }\r\n\r\n        const fetchDishes = () => {\r\n            axios.get(`${process.env.VUE_APP_API}/restaurant/${props.rid}/menu/${props.mid}/dish`)\r\n                .then((res) => {\r\n                    console.log(\"Got it\")\r\n                    console.log(res.data)\r\n                    dishes.value = res.data\r\n                    loading.value = false\r\n                }).catch((err) => {\r\n                    if(err.response?.status === 401){\r\n                        axios.post(`${process.env.VUE_APP_API}/refresh`)\r\n                            .then((res) => {\r\n                                const accessToken = res.data.data.token\r\n                                context.emit('refresh', accessToken)\r\n                                fetchDishes()\r\n                            }).catch((err) => {\r\n\r\n                            })\r\n                    }\r\n                    else if(err.response?.status === 404)\r\n                    {\r\n                        empty.value = true\r\n                        loading.value = false\r\n                    }\r\n                    console.log(\"Response\")\r\n                    console.log(err.response)\r\n                    if(!err.response) {\r\n                        toast.error('Server is currently offline', {\r\n                            position: POSITION.TOP_CENTER,\r\n                            timeout: 3000,\r\n                            closeButton: CloseButton\r\n                        })\r\n                    }\r\n                    else console.log(err)\r\n                })\r\n        }\r\n\r\n        const createModalSubmit = () => {\r\n                submitting.value = true\r\n                data.restaurant = props.rid\r\n                axios.post(`${process.env.VUE_APP_API}/restaurant/${props.rid}/menu`, data)\r\n                    .then(() => {\r\n                        errors.value = {}\r\n                        submitting.value = false\r\n                        createModal.value = false\r\n                        toast.info('Successfully created a new menu', {\r\n                            position: POSITION.TOP_CENTER,\r\n                            timeout: 3000,\r\n                            closeButton: CloseButton\r\n                        })\r\n                        fetchDishes()\r\n                    }).catch((err) => {\r\n                        if(err.response?.status !== 201)\r\n                        {\r\n                            submitting.value = false\r\n                            errors.value = err.response.data.data\r\n                        }\r\n                        else console.log(err)\r\n\r\n                        console.log(err.response?.status)\r\n                    })\r\n        }\r\n\r\n        const deleteDish = (index) => {\r\n            deleteModal.value = true;\r\n            toDelete = index\r\n        }\r\n\r\n        const deleteModalClose = () => {\r\n            deleteModal.value = false;\r\n        }\r\n\r\n        const deleteModalSubmit = () => {\r\n                axios.delete(`${process.env.VUE_APP_API}/restaurant/${props.rid}/menu/${toDelete}`)\r\n                    .then(() => {\r\n                        toast.info('Successfully deleted the menu', {\r\n                            position: POSITION.TOP_CENTER,\r\n                            timeout: 3000,\r\n                            closeButton: CloseButton\r\n                        })\r\n                    }).catch((err) => {\r\n                        if(err.response?.status === 404) {\r\n                            toast.error('Restaurant not found', {\r\n                                position: POSITION.TOP_CENTER,\r\n                                timeout: 3000,\r\n                                closeButton: CloseButton\r\n                            })\r\n                        }\r\n                        else if(!err.response) {\r\n                            toast.error('Server is currently offline', {\r\n                                position: POSITION.TOP_CENTER,\r\n                                timeout: 3000,\r\n                                closeButton: CloseButton\r\n                            })\r\n                        }\r\n                        else console.log(err)\r\n                    })\r\n\r\n            submitting.value = false\r\n            deleteModal.value = false;\r\n            fetchDishes()\r\n        }\r\n\r\n        const createDish = () => {\r\n            createModal.value = true;\r\n            data.name = ''\r\n            data.owner = ''\r\n            data.status = ''\r\n        }\r\n\r\n        const createModalClose = () => {\r\n            createModal.value = false;\r\n        }\r\n\r\n        const updateDish = (index) => {\r\n            updateModal.value = true;\r\n            toDelete = index\r\n            var res = menus.value.find(menu => menu.id === index)\r\n            data.name = res.name\r\n            data.description = res.description\r\n            data.restaurant = res.restaurant\r\n        }\r\n\r\n        const updateModalClose = () => {\r\n            updateModal.value = false;\r\n        }\r\n\r\n        const updateModalSubmit = () => {\r\n            axios.put(`${process.env.VUE_APP_API}/restaurant/${props.rid}/menu/${toDelete}`, data)\r\n                    .then(() => {\r\n                        toast.info('Successfully updated the restaurant', {\r\n                            position: POSITION.TOP_CENTER,\r\n                            timeout: 3000,\r\n                            closeButton: CloseButton\r\n                        })\r\n                        updateModal.value = false;\r\n                        submitting.value = false\r\n                    }).catch((err) => {\r\n                        if(err.response?.status === 404) {\r\n                            toast.error('Restaurant not found', {\r\n                                position: POSITION.TOP_CENTER,\r\n                                timeout: 3000,\r\n                                closeButton: CloseButton\r\n                            })\r\n                        }\r\n                        else if(err.response?.status === 400)\r\n                        {\r\n                            submitting.value = false\r\n                            errors.value = err.response.data.data\r\n                        }\r\n                        else if(!err.response) {\r\n                            toast.error('Server is currently offline', {\r\n                                position: POSITION.TOP_CENTER,\r\n                                timeout: 3000,\r\n                                closeButton: CloseButton\r\n                            })\r\n                        }\r\n                        else console.log(err)\r\n                    })\r\n\r\n                    fetchDishes()\r\n        }\r\n\r\n        onMounted(() => {\r\n            fetchDishes() // Initial fetch of restaurants\r\n            isOwner()\r\n        })\r\n\r\n        return { dishes, loading, empty, claims, data, errors, isUserOwner, deleteDish, deleteModalClose, deleteModalSubmit, createDish, createModalClose, createModalSubmit, updateDish, updateModalClose, updateModalSubmit, deleteModal, createModal, updateModal }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}