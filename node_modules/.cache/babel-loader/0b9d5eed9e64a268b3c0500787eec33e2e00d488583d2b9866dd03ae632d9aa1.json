{"ast":null,"code":"import { computed, nextTick, reactive, ref } from 'vue';\nimport axios from 'axios';\nimport LoadingDialog from '../components/LoadingDialog.vue';\nimport TableLoader from '../components/TableLoader.vue';\nimport CloseButton from '../components/CloseButton.vue';\nimport { jwtDecode } from 'jwt-decode';\nimport { POSITION, useToast } from 'vue-toastification';\nimport router from '@/router';\nexport default {\n  props: ['cityId', 'managerId', 'token'],\n  components: {\n    TableLoader,\n    LoadingDialog\n  },\n  setup(props, context) {\n    const restaurants = ref([]);\n    const loading = ref(true);\n    axios.get(`${process.env.VUE_APP_API}/restaurant`).then(res => {\n      restaurants.value = res.data;\n      loading.value = false;\n      setup(props, context);\n      console.log(\"aaaaaa\");\n    }).catch(err => {\n      if (err.response?.status === 401) {\n        axios.post(`${process.env.VUE_APP_API}/refresh`).then(res => {\n          const accessToken = res.data.data.token;\n          context.emit('refresh', accessToken);\n        }).catch(err => {});\n      }\n      if (!err.response) {\n        toast.error('Server is currently offline', {\n          position: POSITION.TOP_CENTER,\n          timeout: 3000,\n          closeButton: CloseButton\n        });\n      } else console.log(err);\n    });\n    return {\n      restaurants,\n      loading\n    };\n    return {\n      restaurants\n    };\n  }\n};","map":{"version":3,"names":["computed","nextTick","reactive","ref","axios","LoadingDialog","TableLoader","CloseButton","jwtDecode","POSITION","useToast","router","props","components","setup","context","restaurants","loading","get","process","env","VUE_APP_API","then","res","value","data","console","log","catch","err","response","status","post","accessToken","token","emit","toast","error","position","TOP_CENTER","timeout","closeButton"],"sources":["C:\\Users\\Gedvilas\\Desktop 2\\Kirpyklu-sistema-front\\src\\views\\RestaurantList.vue"],"sourcesContent":["<template>\r\n    <v-container class=\"fill-height\">\r\n        <LoadingDialog v-model=\"loading\"/>\r\n\r\n        <v-row v-if=\"!loading\">\r\n            <v-col class=\"pt-2 pb-2\" v-for=\"restaurant in restaurants\" lg=\"4\" md=\"6\" cols=\"12\" :key=\"restaurant.id\">\r\n                <v-card variant=\"flat\" color=\"blue-grey-lighten-5\" :to=\"{name: 'menus', 'params': { rid: restaurant.id }}\" hover>\r\n                    <v-card-title class=\"text-grey-darken-3\">{{ restaurant.name }}</v-card-title>\r\n                </v-card>\r\n            </v-col>\r\n        </v-row>\r\n\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { computed, nextTick, reactive, ref } from 'vue'\r\nimport axios from 'axios'\r\nimport LoadingDialog from '../components/LoadingDialog.vue'\r\nimport TableLoader from '../components/TableLoader.vue'\r\nimport CloseButton from '../components/CloseButton.vue'\r\nimport { jwtDecode } from 'jwt-decode'\r\nimport { POSITION, useToast } from 'vue-toastification'\r\nimport router from '@/router'\r\nexport default {\r\n    props: ['cityId', 'managerId', 'token'],\r\n    components: {\r\n        TableLoader,\r\n        LoadingDialog\r\n    },\r\n    setup(props, context){\r\n\r\n        const restaurants = ref([])\r\n        const loading = ref(true)\r\n\r\n        axios.get(`${process.env.VUE_APP_API}/restaurant`)\r\n            .then((res) => {\r\n                restaurants.value = res.data\r\n                loading.value = false\r\n                setup(props, context)\r\n                console.log(\"aaaaaa\")\r\n            }).catch((err) => {\r\n                if(err.response?.status === 401){\r\n                    axios.post(`${process.env.VUE_APP_API}/refresh`)\r\n                        .then((res) => {\r\n                            const accessToken = res.data.data.token\r\n                            context.emit('refresh', accessToken)\r\n                        }).catch((err) => {\r\n\r\n                        })\r\n                }\r\n                if(!err.response) {\r\n                    toast.error('Server is currently offline', {\r\n                        position: POSITION.TOP_CENTER,\r\n                        timeout: 3000,\r\n                        closeButton: CloseButton\r\n                    })\r\n                }\r\n                else console.log(err)\r\n            })\r\n\r\n        return { restaurants, loading }\r\n\r\n        return { \r\n            restaurants\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>"],"mappings":"AAgBA,SAASA,QAAQ,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,GAAE,QAAS,KAAI;AACtD,OAAOC,KAAI,MAAO,OAAM;AACxB,OAAOC,aAAY,MAAO,iCAAgC;AAC1D,OAAOC,WAAU,MAAO,+BAA8B;AACtD,OAAOC,WAAU,MAAO,+BAA8B;AACtD,SAASC,SAAQ,QAAS,YAAW;AACrC,SAASC,QAAQ,EAAEC,QAAO,QAAS,oBAAmB;AACtD,OAAOC,MAAK,MAAO,UAAS;AAC5B,eAAe;EACXC,KAAK,EAAE,CAAC,QAAQ,EAAE,WAAW,EAAE,OAAO,CAAC;EACvCC,UAAU,EAAE;IACRP,WAAW;IACXD;EACJ,CAAC;EACDS,KAAKA,CAACF,KAAK,EAAEG,OAAO,EAAC;IAEjB,MAAMC,WAAU,GAAIb,GAAG,CAAC,EAAE;IAC1B,MAAMc,OAAM,GAAId,GAAG,CAAC,IAAI;IAExBC,KAAK,CAACc,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,WAAY,aAAY,EAC5CC,IAAI,CAAEC,GAAG,IAAK;MACXP,WAAW,CAACQ,KAAI,GAAID,GAAG,CAACE,IAAG;MAC3BR,OAAO,CAACO,KAAI,GAAI,KAAI;MACpBV,KAAK,CAACF,KAAK,EAAEG,OAAO;MACpBW,OAAO,CAACC,GAAG,CAAC,QAAQ;IACxB,CAAC,CAAC,CAACC,KAAK,CAAEC,GAAG,IAAK;MACd,IAAGA,GAAG,CAACC,QAAQ,EAAEC,MAAK,KAAM,GAAG,EAAC;QAC5B3B,KAAK,CAAC4B,IAAI,CAAE,GAAEb,OAAO,CAACC,GAAG,CAACC,WAAY,UAAS,EAC1CC,IAAI,CAAEC,GAAG,IAAK;UACX,MAAMU,WAAU,GAAIV,GAAG,CAACE,IAAI,CAACA,IAAI,CAACS,KAAI;UACtCnB,OAAO,CAACoB,IAAI,CAAC,SAAS,EAAEF,WAAW;QACvC,CAAC,CAAC,CAACL,KAAK,CAAEC,GAAG,IAAK,CAElB,CAAC;MACT;MACA,IAAG,CAACA,GAAG,CAACC,QAAQ,EAAE;QACdM,KAAK,CAACC,KAAK,CAAC,6BAA6B,EAAE;UACvCC,QAAQ,EAAE7B,QAAQ,CAAC8B,UAAU;UAC7BC,OAAO,EAAE,IAAI;UACbC,WAAW,EAAElC;QACjB,CAAC;MACL,OACKmB,OAAO,CAACC,GAAG,CAACE,GAAG;IACxB,CAAC;IAEL,OAAO;MAAEb,WAAW;MAAEC;IAAQ;IAE9B,OAAO;MACHD;IACJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}